{"version":3,"sources":["Components/Icon.js","App.js","reportWebVitals.js","index.js"],"names":["Icon","choice","className","tictacArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","index","toast","type","Container","position","style","textAlign","fontFamily","fontStyle","Row","Col","md","Button","onClick","fontSize","padding","map","value","Card","CardBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f017c831.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaTimes,FaRegCircle } from \"react-icons/fa\";\r\n\r\nconst Icon = ({choice}) => {\r\n\r\n\tswitch(choice){\r\n\t\tcase \"cross\":\r\n\t\t\treturn <FaTimes className=\"icon\"/>\r\n\t\tcase \"circle\":\r\n\t\t\treturn <FaRegCircle className=\"icon\"/>\r\n\t\tdefault:\r\n\t\t\treturn \"\";\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Icon;","import React , { useState} from 'react';\nimport Icon from './Components/Icon';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Container, Card, CardBody, Row, Col } from 'reactstrap';\nimport './style.css';\n\nconst tictacArray = new Array(9).fill(\"\");\n\nfunction App() {\n  const [isCross, setIsCross]  = useState(true);\n  const [winMessage, setWinMessage] = useState(\"\");\n\n  const playAgain = () => {\n    setIsCross(true);\n    setWinMessage(\"\");\n    tictacArray.fill(\"\");\n  }\n\n  const findWinner = () => {\n    //console.log('findWinner called');\n    if(tictacArray[0]==tictacArray[1]&&tictacArray[0]==tictacArray[2]&& tictacArray[0]!=\"\"){\n        setWinMessage(tictacArray[0]+\" has won\");\n    }\n    else if(tictacArray[3]==tictacArray[4]&&tictacArray[3]==tictacArray[5]&&tictacArray[3]!=\"\"){\n      setWinMessage(tictacArray[3]+\" has won\");\n    }\n    else if(tictacArray[6]==tictacArray[7]&&tictacArray[6]==tictacArray[8]&&tictacArray[6]!=\"\"){\n      setWinMessage(tictacArray[6]+\" has won\");\n    }\n    else if(tictacArray[0]==tictacArray[3]&&tictacArray[0]==tictacArray[6]&&tictacArray[0]!=\"\"){\n      setWinMessage(tictacArray[0]+\" has won\");\n    }\n    else if(tictacArray[1]==tictacArray[4]&&tictacArray[1]==tictacArray[7]&&tictacArray[1]!=\"\"){\n      setWinMessage(tictacArray[1]+\" has won\");\n    }\n    else if(tictacArray[2]==tictacArray[5]&&tictacArray[2]==tictacArray[8]&&tictacArray[2]!=\"\"){\n      setWinMessage(tictacArray[2]+\" has won\");\n    }\n    else if(tictacArray[2]==tictacArray[4]&&tictacArray[2]==tictacArray[6]&&tictacArray[2]!=\"\"){\n      setWinMessage(tictacArray[2]+\" has won\");\n    }\n    else if(tictacArray[0]==tictacArray[4]&&tictacArray[0]==tictacArray[8]&&tictacArray[0]!=\"\"){\n      setWinMessage(tictacArray[0]+\" has won\");\n    }\n    else if((tictacArray[0]=='cross'||tictacArray[0]=='circle')&&(tictacArray[1]=='cross'||tictacArray[1]=='circle')&&\n            (tictacArray[2]=='cross'||tictacArray[2]=='circle')&&(tictacArray[3]=='cross'||tictacArray[3]=='circle')&&\n            (tictacArray[4]=='cross'||tictacArray[4]=='circle')&&(tictacArray[5]=='cross'||tictacArray[5]=='circle')&&\n            (tictacArray[6]=='cross'||tictacArray[6]=='circle')&&(tictacArray[7]=='cross'||tictacArray[7]=='circle')&&\n            (tictacArray[8]=='cross'||tictacArray[8]=='circle')){\n        //alert(\"tie\");\n       setWinMessage(\"It's a Tie\");\n   }\n    \n  }\n\n  const changeItem = (index) =>{\n      if(winMessage){\n        return toast(\"Game is over\", {type: \"success\"})\n      }\n      if(tictacArray[index]==\"\"){\n        tictacArray[index] = isCross ? \"cross\": \"circle\"\n        setIsCross(!isCross)\n      }\n      else{\n        return toast(\"This is already Occupied\",{type: \"error\"});\n      }\n      findWinner()\n  }\n  return (\n    <Container className=\"p-5\">\n      <ToastContainer position='bottom-center'></ToastContainer>\n      <h1 style={{textAlign: 'center',fontFamily: 'Franklin Gothic',fontStyle: 'italic'}}>Tic Tac Toe</h1>\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {\n            winMessage ? (\n              <div>\n                <h1 className=\"text-center\">\n                  {winMessage}\n                </h1>\n                <Button className=\"button\" onClick={playAgain}>Play Again</Button>\n              </div>\n              ) : (\n                <h1 style={{ textAlign: 'center', fontSize: '25px',fontFamily: 'verdana',padding: '5px'}}>\n                  {isCross ? \"Player 1's turn\": \"Player 2's turn\"}\n                </h1>\n              )\n          }\n          <div className=\"grid\">\n            {tictacArray.map((value,index)=>(\n              <Card onClick={ () => changeItem(index)}>\n                <CardBody className=\"box\">\n                  <Icon choice={tictacArray[index]}/>\n                </CardBody>\n              </Card>\n              ))}\n          </div>  \n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}